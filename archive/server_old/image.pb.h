/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_IMAGE_PB_H_INCLUDED
#define PB_IMAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ImageChunk {
    int32_t index;
    pb_callback_t data;
    bool isLast;
} ImageChunk;

typedef struct _ImagePacket {
    int32_t total;
    int32_t imageSize;
    int64_t timestamp;
    pb_callback_t chunks;
} ImagePacket;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ImageChunk_init_default                  {0, {{NULL}, NULL}, 0}
#define ImagePacket_init_default                 {0, 0, 0, {{NULL}, NULL}}
#define ImageChunk_init_zero                     {0, {{NULL}, NULL}, 0}
#define ImagePacket_init_zero                    {0, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define ImageChunk_index_tag                     1
#define ImageChunk_data_tag                      2
#define ImageChunk_isLast_tag                    3
#define ImagePacket_total_tag                    1
#define ImagePacket_imageSize_tag                2
#define ImagePacket_timestamp_tag                3
#define ImagePacket_chunks_tag                   4

/* Struct field encoding specification for nanopb */
#define ImageChunk_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    index,             1) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              2) \
X(a, STATIC,   SINGULAR, BOOL,     isLast,            3)
#define ImageChunk_CALLBACK pb_default_field_callback
#define ImageChunk_DEFAULT NULL

#define ImagePacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    total,             1) \
X(a, STATIC,   SINGULAR, INT32,    imageSize,         2) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,         3) \
X(a, CALLBACK, REPEATED, MESSAGE,  chunks,            4)
#define ImagePacket_CALLBACK pb_default_field_callback
#define ImagePacket_DEFAULT NULL
#define ImagePacket_chunks_MSGTYPE ImageChunk

extern const pb_msgdesc_t ImageChunk_msg;
extern const pb_msgdesc_t ImagePacket_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ImageChunk_fields &ImageChunk_msg
#define ImagePacket_fields &ImagePacket_msg

/* Maximum encoded size of messages (where known) */
/* ImageChunk_size depends on runtime parameters */
/* ImagePacket_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
